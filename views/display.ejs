<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Playlist Size Tracker for Spotify</title>
</head>
<body>
    <h1><%= list_name %></h1><br>

    <div style="width: 75%; height: 75%;">
        <canvas id="chart"></canvas>
    </div>

    <h2>Tracks:</h2>
    <% for (var i = 0; i < display_data.length; i++) { %>
    <%- (i+1).toString().padStart(4, "⠀").padEnd(6, "⠀") %> | <%- display_data[i].name %> - <%- display_data[i].artists %> : <%= display_data[i].date %><br>
    <% } %>

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/luxon/build/global/luxon.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-adapter-luxon"></script>

    <script>

        const ctx = document.getElementById('chart');

        const json_data = <%- JSON.stringify(chart_data) %>
        const tooltip_data = <%- JSON.stringify(tooltip_data) %>
        const track_links = <%- JSON.stringify(track_links) %>

        const dates = json_data.map(d => new Date(d.x)); // get an array containing only the dates
        let minDate = new Date(Math.min.apply(null, dates));
        let maxDate = new Date(Math.max.apply(null, dates));
        minDate = new Date(minDate.getTime() - 0.05 * (maxDate - minDate));
        maxDate = Date.now();

        const data = {
                    datasets: [
                        {
                            label: 'Playlist Size',
                            data: json_data,
                            borderColor: 'rgba(255, 61, 61)',
                            borderWidth: 2,
                            backgroundColor: 'rgba(0, 0, 0, 0)',
                        }
                    ]
                };

                const config = {
                    type: 'line',
                    data: data,
                    options: {
                        interaction: {
                            mode: 'nearest'
                        },
                        onClick: (event, elements) => {
                            if (elements.length > 0) {
                                const index = elements[0].index; // get selected track no.
                                window.open(track_links[index], '_blank'); // redirect to the song's page on spotify
                            }
                        },
                        plugins: {
                          tooltip: {
                            callbacks: {
                                beforeLabel: (context) => {
                                    if (context.parsed) {
                                        let data = tooltip_data[context.parsed.y - 1];
                                        return `${data.name} - ${data.artists}`;
                                    }
                                },
                                label: (context) => {
                                    if (context.parsed)
                                        return '#' + context.parsed.y;
                                },
                                afterLabel: (context) => {
                                    if (context.parsed)
                                        return 'Click to Listen on Spotify';
                                }
                            }
                          }
                        },
                        scales: {
                            x: {
                                type: 'time',
                                time: {
                                    tooltipFormat: 'DD T',
                                    minUnit: 'day',
                                    displayFormats: {
                                        day: 'dd/MM/yy'
                                    }
                                },
                                title: {
                                    display: true,
                                    text: 'Date',
                                    font: {
                                        size: 20,
                                        weight: 'bold',
                                        lineHeight: 1.2
                                    },
                                    padding: {top: 10, left: 0, right: 0, bottom: 0}

                                },
                                min: minDate,
                                max: maxDate
                            },
                            y: {
                                title: {
                                    display: true,
                                    text: 'No. of Tracks',
                                    font: {
                                        size: 20,
                                        weight: 'bold',
                                        lineHeight: 1.2
                                    },
                                    padding: {top: 0, left: 0, right: 20, bottom: 0}
                                },
                                min: 0,
                                max: <%= Math.ceil(num_tracks / 10) * 10 %>,
                                ticks: {
                                    stepSize: <%= Math.ceil(num_tracks / 10) %>
                                }
                            }
                        }
                    }
                };

        new Chart(ctx, config);
    </script>
</body>
</html>